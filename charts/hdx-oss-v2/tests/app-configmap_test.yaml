suite: Test App ConfigMap
templates:
  - configmaps/app-configmap.yaml
tests:
  - it: should render app configmap correctly with default values
    set:
      hyperdx:
        apiPort: 8000
        appPort: 3000
        frontendUrl: http://localhost:3000
        logLevel: info
        usageStatsEnabled: true
      mongodb:
        port: 27017
      tasks:
        enabled: false
    asserts:
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: metadata.name
          pattern: -app-config$
      - equal:
          path: data.APP_PORT
          value: "3000"
      - equal:
          path: data.API_PORT
          value: "8000"
      - equal:
          path: data.FRONTEND_URL
          value: "http://localhost:3000"
      - equal:
          path: data.HYPERDX_LOG_LEVEL
          value: "info"
      - equal:
          path: data.USAGE_STATS_ENABLED
          value: "true"
      - equal:
          path: data.RUN_SCHEDULED_TASKS_EXTERNALLY
          value: "false"
      - matchRegex:
          path: data.MONGO_URI
          pattern: mongodb://.*-mongodb:27017/hyperdx

  - it: should use default frontendUrl template with appUrl and appPort
    set:
      hyperdx:
        apiPort: 8000
        appPort: 3000
        appUrl: "http://localhost"
        # frontendUrl should default to {{ .Values.hyperdx.appUrl }}:{{ .Values.hyperdx.appPort }}
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "http://localhost:3000"

  - it: should override frontendUrl when explicitly set
    set:
      hyperdx:
        apiPort: 8000
        appPort: 3000
        appUrl: "http://localhost"
        frontendUrl: "https://my-custom-domain.com"
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "https://my-custom-domain.com"

  - it: should support template expressions in frontendUrl
    set:
      hyperdx:
        apiPort: 8000
        appPort: 4000
        appUrl: "https://production-host"
        frontendUrl: "{{ .Values.hyperdx.appUrl }}:{{ .Values.hyperdx.appPort }}/app"
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "https://production-host:4000/app"

  - it: should handle custom appUrl and appPort in default frontendUrl
    set:
      hyperdx:
        apiPort: 8000
        appPort: 4000
        appUrl: "https://staging.example.com"
        # Using default frontendUrl template
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "https://staging.example.com:4000"

  - it: should work with ingress-style URLs in frontendUrl
    set:
      hyperdx:
        apiPort: 8000
        appPort: 3000
        appUrl: "http://localhost"
        frontendUrl: "https://hyperdx.example.com"
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "https://hyperdx.example.com"

  - it: should support complex template expressions
    set:
      hyperdx:
        apiPort: 8000
        appPort: 3000
        appUrl: "http://localhost"
        frontendUrl: '{{ if eq .Values.env "production" }}https://prod.example.com{{ else }}{{ .Values.hyperdx.appUrl }}:{{ .Values.hyperdx.appPort }}{{ end }}'
      env: "development"
      mongodb:
        port: 27017
    asserts:
      - equal:
          path: data.FRONTEND_URL
          value: "http://localhost:3000"
