suite: Test External Configuration Secret
templates:
  - hyperdx-deployment.yaml
tests:
  - it: should use inline configuration when useExistingConfigSecret is false
    set:
      hyperdx:
        useExistingConfigSecret: false
        defaultConnections: |
          [
            {
              "name": "Test ClickHouse",
              "host": "http://test-clickhouse:8123",
              "port": 8123,
              "username": "test",
              "password": "test"
            }
          ]
        defaultSources: |
          [
            {
              "name": "Test Logs",
              "kind": "log",
              "connection": "Test ClickHouse"
            }
          ]
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            value: |
              [
                {
                  "name": "Test ClickHouse",
                  "host": "http://test-clickhouse:8123",
                  "port": 8123,
                  "username": "test",
                  "password": "test"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            value: |
              [
                {
                  "name": "Test Logs",
                  "kind": "log",
                  "connection": "Test ClickHouse"
                }
              ]

  - it: should use external secret when useExistingConfigSecret is true
    set:
      hyperdx:
        useExistingConfigSecret: true
        existingConfigSecret: "my-external-config"
        existingConfigConnectionsKey: "connections.json"
        existingConfigSourcesKey: "sources.json"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: "my-external-config"
                key: "connections.json"
                optional: false
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: "my-external-config"
                key: "sources.json"
                optional: false

  - it: should use default keys when not specified
    set:
      hyperdx:
        useExistingConfigSecret: true
        existingConfigSecret: "my-external-config"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: "my-external-config"
                key: "connections.json"
                optional: false
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: "my-external-config"
                key: "sources.json"
                optional: false

  - it: should use custom keys when specified
    set:
      hyperdx:
        useExistingConfigSecret: true
        existingConfigSecret: "shared-configs"
        existingConfigConnectionsKey: "hyperdx-connections"
        existingConfigSourcesKey: "hyperdx-sources"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: "shared-configs"
                key: "hyperdx-connections"
                optional: false
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: "shared-configs"
                key: "hyperdx-sources"
                optional: false

  - it: should not include DEFAULT_CONNECTIONS when defaultConnections is empty and useExistingConfigSecret is false
    set:
      hyperdx:
        useExistingConfigSecret: false
        defaultConnections: ""
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS

  - it: should include default configuration when not overridden and useExistingConfigSecret is false
    set:
      hyperdx:
        useExistingConfigSecret: false
    template: hyperdx-deployment.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            value: |
              [
                {
                  "name": "Local ClickHouse",
                  "host": "http://RELEASE-NAME-hdx-oss-v2-clickhouse:8123",
                  "port": 8123,
                  "username": "app",
                  "password": "hyperdx"
                }
              ]
      - exists:
          path: spec.template.spec.containers[0].env[?(@.name == "DEFAULT_SOURCES")]

  - it: should prioritize external secret over inline configuration when both are configured
    set:
      hyperdx:
        useExistingConfigSecret: true
        existingConfigSecret: "priority-test-secret"
        existingConfigConnectionsKey: "connections.json"
        existingConfigSourcesKey: "sources.json"
        defaultConnections: |
          [
            {
              "name": "Should Not Appear",
              "host": "http://should-not-appear:8123"
            }
          ]
        defaultSources: |
          [
            {
              "name": "Should Not Appear"
            }
          ]
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: "priority-test-secret"
                key: "connections.json"
                optional: false
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: "priority-test-secret"
                key: "sources.json"
                optional: false
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            value: |
              [
                {
                  "name": "Should Not Appear",
                  "host": "http://should-not-appear:8123"
                }
              ]

  - it: should handle empty existingConfigSecret gracefully
    set:
      hyperdx:
        useExistingConfigSecret: true
        existingConfigSecret: ""
        defaultConnections: |
          [
            {
              "name": "Fallback ClickHouse",
              "host": "http://fallback:8123"
            }
          ]
        defaultSources: |
          [
            {
              "name": "Fallback Sources"
            }
          ]
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_CONNECTIONS
            valueFrom:
              secretKeyRef:
                name: ""
                key: "connections.json"
                optional: false
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: DEFAULT_SOURCES
            valueFrom:
              secretKeyRef:
                name: ""
                key: "sources.json"
                optional: false